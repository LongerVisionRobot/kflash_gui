name: build and release
on:
  push:
    tags:
      - "*"

permissions:
  contents: write
  pull-requests: write

jobs:
  Build:
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        os:
          - ubuntu-18.04
          - macos-11
          - windows-2019
        python-version:
          - '3.8'
    steps:
      - name: 'Install Packages'
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            sudo apt-get install -yq x11-utils libxkbcommon-x11-0 libfuse2
          elif [ "${{ runner.os }}" == "macOS" ]; then
            brew install create-dmg
          elif [ "${{ runner.os }}" == "Windows" ]; then
            echo "Noting to install on windows"
          else
            echo "${{ runner.os }} not supported"
            exit 1
          fi
        shell: bash
      - name: 'Set up Python ${{ matrix.python-version }}'
        uses: actions/setup-python@v3
        with:
          python-version: '${{ matrix.python-version }}'
      - uses: actions/checkout@v3
      - name: Get submodules
        run: |
          git submodule update --init --recursive
      - run: pip3 install --upgrade pip
      - run: pip3 install -r requirements.txt
      - run: pip3 freeze
      - run: python3 pack.py || python pack.py
      - name: 'Before deploy'
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            mv "dist/kflash_gui.tar.xz" "dist/kflash_gui_${{ github.ref_name }}_linux.tar.xz"
            mkdir -p "dist/AppDir/usr/bin"
            cp -rf "dist/kflash_gui" "dist/AppDir/usr/bin/kflash_gui"
            cp -rf "kflash_gui_data/assets/logo.png" "dist/AppDir/kflash_gui.png"
            cp -rf "kflash_gui_data/application/kflash_gui.desktop" "dist/AppDir/kflash_gui.desktop"
            cp -rf "kflash_gui_data/application/kflash_gui.sh" "dist/AppDir/AppRun"
            chmod +x "dist/AppDir/AppRun"
            chmod +x "dist/AppDir/usr/bin/kflash_gui"
            wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage && chmod +x linuxdeploy-x86_64.AppImage
            pushd "dist" && ${{github.workspace}}/linuxdeploy-x86_64.AppImage --appdir "AppDir" --output appimage && popd
            LD_LIBRARY_PATH='' find ./AppDir -type f -exec ldd {} 2>&1 \; | grep '=>' | grep -v AppDir
            ls -l "dist"
            mv dist/*.AppImage "dist/kflash_gui_${{ github.ref_name }}_linux.AppImage"
          elif [ "${{ runner.os }}" == "macOS" ]; then
            mv "dist/kflash_gui.dmg" "dist/kflash_gui_${{ github.ref_name }}_macOS.dmg"
          elif [ "${{ runner.os }}" == "Windows" ]; then
            mv "dist/kflash_gui.7z" "dist/kflash_gui_${{ github.ref_name }}_windows.7z"
          else
            echo "${{ runner.os }} not supported"
            exit 1
          fi
          find dist
        shell: bash
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            dist/kflash_gui_${{ github.ref_name }}_linux.tar.xz
            dist/kflash_gui_${{ github.ref_name }}_linux.AppImage
            dist/kflash_gui_${{ github.ref_name }}_macOS.dmg
            dist/kflash_gui_${{ github.ref_name }}_windows.7z
